---
import '../../styles/global.css'

import Layout from '../../layouts/Layout.astro'

/* Initialize Mini Apps */
import MiniAppHeader from '../../components/miniapp/Header.vue'
import MiniAppFooter from '../../components/miniapp/Footer.vue'
import MiniAppFanClub from '../../components/miniapp/FanClub.vue'

/* Initialize Web Apps */
import WebAppHeader from '../../components/webapp/Header.vue'
import WebAppFooter from '../../components/webapp/Footer.vue'
import WebAppFanClub from '../../components/webapp/FanClub.vue'

export const prerender = false

/* Initialize constants. */
const hostname = Astro.url?.hostname

/* Initialize globals. */
let isMiniApp = true//false

/* Validate Mini App. */
if (hostname === 'app.miniapps.party') {
	isMiniApp = true
}

/* Parse app ID (from params). */
const { appid } = Astro.params

// FIXME LOOKUP APP ID FOR APP NAME

const appName = 'My Awesome App'
---

<Layout>
	<!-- Begin Mini App Main -->
	{isMiniApp && <div class="flex flex-col h-screen justify-between bg-[#21223e]">
		<MiniAppHeader client:load />

		<MiniAppFanClub client:load class="flex-1" appName={appName} />

		<MiniAppFooter />
	</div>}
	<!-- End Mini App Main -->

	<!-- Begin Web App Main -->
	{!isMiniApp && <WebAppHeader client:load />

	<WebAppFanClub client:load />

	<WebAppFooter />}
</Layout>

<script>
/* Import modules. */
import { sdk } from '@farcaster/frame-sdk'

/* Request Mini App flag. */
// TODO Maybe we set a SESSION flag??
// const isMiniApp = await sdk.isInMiniApp()

/* Set constants. */
// const INIT_DELAY = 1000 // 1 second

/* Validate mini app. */
// if (isMiniApp) {
// 	/* Load app. */
// 	setTimeout(sdk.actions.ready, INIT_DELAY)
// }

/* For ready. */
await sdk.actions.ready()
</script>
